pkgname=('clang-custom-release')
_pkgver=18.1.0
_pkg_suffix=rc2
_pkgver_suffix=${_pkgver}
_pkgver_dash_suffix=${_pkgver}
if [[ -n ${_pkg_suffix} ]]; then
    _pkgver_suffix=${_pkgver_suffix}${_pkg_suffix}
    _pkgver_dash_suffix=${_pkgver_dash_suffix}-${_pkg_suffix}
fi
pkgver=${_pkgver_suffix}
pkgrel=1
arch=('x86_64')
url="https://llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=('git' 'cmake' 'ninja' 'libffi' 'libedit' 'ncurses' 'libxml2' 'swig' 'lld' 'python' 'libc++' 'ocl-icd' 'opencl-headers' 'z3' 'jsoncpp' 'clang' 'ccache')
checkdepends=("python-psutil")

source=("https://github.com/llvm/llvm-project/releases/download/llvmorg-${_pkgver_dash_suffix}/llvm-project-${_pkgver_suffix}.src.tar.xz")
sha512sums=('SKIP')
install=clang.install

prefix_path="/opt/clang"
install_path="${prefix_path}/${pkgver}"

build() {
    unset CFLAGS
    unset CXXFLAGS
    unset LDFLAGS
    
    rm -rf _build
    mkdir _build

    cmake \
        -B _build \
        -GNinja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_COMPILER=clang \
        -DCMAKE_CXX_COMPILER=clang++ \
        -DCMAKE_EXE_LINKER_FLAGS=-Wl,-Bsymbolic-functions \
        -DCMAKE_INSTALL_PREFIX:PATH=${install_path} \
        -DCMAKE_SHARED_LINKER_FLAGS=-Wl,-Bsymbolic-functions \
        -DCLANG_DEFAULT_PIE_ON_LINUX=On \
        -DCLANG_LINK_CLANG_DYLIB=On \
        -DLIBCXX_INSTALL_MODULES=On \
        -DLLVM_CCACHE_BUILD=On \
        -DLLVM_ENABLE_WERROR=Off \
        -DLLVM_ENABLE_UNWIND_TABLES=Off \
        -DLLVM_ENABLE_LLD=On \
        -DLLVM_ENABLE_LTO=Thin \
        -DLLVM_ENABLE_PROJECTS="all" \
        -DLLVM_ENABLE_RUNTIMES="all" \
        -DLLVM_LINK_LLVM_DYLIB=On \
        -S ${srcdir}/llvm-project-${_pkgver_suffix}.src/llvm
    cmake --build _build
}

package() {
    cp  ${startdir}/clang.install
    sed -i "s,CLANG_PREFIX,${prefix_path},g;s,CLANG_VERSION,${_pkgver_suffix},g" ${startdir}/clang.install.template > ${startdir}/clang.install
    DESTDIR="$pkgdir" ninja -C _build install
}
